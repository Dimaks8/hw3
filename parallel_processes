import warnings 
warnings.filterwarnings('ignore')

import os 
import librosa 
import numpy 
import soundfile 
import tqdm 
from concurrent.futures import ProcessPoolExecutor, ThreadPoolExecutor, as_completed


def base_extract(node, path_desired, rel): 
	path = "{}/{}".format(path_desired, rel) 
	os.makedirs("{}/{}".format(path_desired, rel), exist_ok=True) 
	for k in node[2]: 
		aud_series, rate = librosa.core.load('{}/{}'.format(node[0], k)) 
		mfcc_features = librosa.feature.mfcc(aud_series, rate) 
		numpy.savetxt("{}/{}.csv".format(path, k), mfcc_features, delimiter=",")
			
def extract_mfcc_processes(start_path, path_desired, quantity = 8): 
	tree = tqdm(os.walk(start_path)) 
	with ProcessPoolExecutor(max_workers = quantity) as pool: 
		for node in tree: 
			rel = os.path.relpath(node[0]) 
			if node[2]: 
				pool.submit(base_extract, node, path_desired, rel)
				

extract_mfcc_processes("aac", "result_proc")
